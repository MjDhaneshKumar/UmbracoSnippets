****************************************************************************************************************************************************************

U 7


var userService = ApplicationContext.Current.Services.UserService;
    // Create a new user
    var newUser = userService.CreateUserWithIdentity("dhanesh.kumar+admin1@phases.dk", "dhanesh.kumar+admin1@phases.dk");
    // Get user group as IReadOnlyUserGroup
    var userGroup = userService.GetUserGroupByAlias("admin") as Umbraco.Core.Models.Membership.IReadOnlyUserGroup;
    // Add the userGroup to the newUser
    newUser.AddGroup(userGroup);
    // Set the user's password
    newUser.RawPasswordValue = (Membership.Providers["UsersMembershipProvider"] as using Umbraco.Web.Security.Providers.UsersMembershipProvider).HashPasswordForStorage("dhanesh.kumar+admin@phases.dk"); ;
    // Save the new user
    userService.Save(newUser);

UMBRAC PASSWORD RESET*
****************************************************************************************************************************************************************

Umbraco User Password RESET

var user = ApplicationContext.Services.UserService.GetUserById(userId);
                if (user != null)
                {

                    user.Username = userName;
                    user.IsApproved = true;
                    user.IsLockedOut = false;

                   
                    ApplicationContext.Services.UserService.Save(user);
                
                    //Change password
                    ApplicationContext.Services.UserService.SavePassword(user,userPassword);
                }

****************************************************************************************************************************************************************

V8 - 

Versions - 8.0.2

 var userService = Current.Services.UserService;
            // Create a new user
            var newUser = userService.CreateUserWithIdentity("username", "email");
            // Get user group as IReadOnlyUserGroup
            var userGroup = userService.GetUserGroupByAlias("admin") as Core.Models.Membership.IReadOnlyUserGroup;
            // Add the userGroup to the newUser
            newUser.AddGroup(userGroup);
            // Set the user's password
            newUser.RawPasswordValue = (Membership.Providers["UsersMembershipProvider"] as Web.Security.Providers.UsersMembershipProvider).HashPasswordForStorage("password"); ;
            // Save the new user
            userService.Save(newUser);

****************************************************************************************************************************************************************





v8 - 8.12 


@{
        var newUserModel = Services.UserService.GetUserById(3);
        if (newUserModel != null)
        {
            newUserModel.IsLockedOut = false;
            Services.UserService.Save(newUserModel, false);
        }
     }
**************************************************************************************************************************************************************************
